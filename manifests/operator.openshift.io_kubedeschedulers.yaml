apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: kubedeschedulers.operator.openshift.io
spec:
  group: operator.openshift.io
  names:
    kind: KubeDescheduler
    plural: kubedeschedulers
  scope: ""
  version: v1beta1
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: KubeDescheduler is the Schema for the deschedulers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KubeDeschedulerSpec defines the desired state of KubeDescheduler
            properties:
              Flags:
                description: Flags for descheduler.
                items:
                  description: Param is a key/value pair representing the parameters
                    in strategy or flags.
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                  required:
                  - name
                  - value
                  type: object
                type: array
              image:
                description: Image of the deschduler being managed. This includes
                  the version of the operand(descheduler).
                type: string
              logLevel:
                description: logLevel is an intent based logging for an overall component.  It
                  does not give fine grained control, but it is a simple way to manage
                  coarse grained logging choices that operators have to interpret
                  for their operands.
                type: string
              managementState:
                description: managementState indicates whether and how the operator
                  should manage the component
                pattern: ^(Managed|Unmanaged|Force|Removed)$
                type: string
              observedConfig:
                description: observedConfig holds a sparse config that controller
                  has observed from the cluster state.  It exists in spec because
                  it is an input to the level for the operator
                nullable: true
                type: object
              operatorLogLevel:
                description: operatorLogLevel is an intent based logging for the operator
                  itself.  It does not give fine grained control, but it is a simple
                  way to manage coarse grained logging choices that operators have
                  to interpret for themselves.
                type: string
              schedule:
                description: Schedule on which cronjob should run, example would be
                  "*/1 * * * ?"
                type: string
              strategies:
                description: Strategies contain list of strategies that should be
                  enabled in descheduler.
                items:
                  description: Strategy supported by descheduler
                  properties:
                    name:
                      type: string
                    params:
                      items:
                        description: Param is a key/value pair representing the parameters
                          in strategy or flags.
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                  required:
                  - params
                  type: object
                type: array
              unsupportedConfigOverrides:
                description: 'unsupportedConfigOverrides holds a sparse config that
                  will override any previously set options.  It only needs to be the
                  fields to override it will end up overlaying in the following order:
                  1. hardcoded defaults 2. observedConfig 3. unsupportedConfigOverrides'
                nullable: true
                type: object
            required:
            - Flags
            - image
            type: object
          status:
            description: KubeDeschedulerStatus defines the observed state of KubeDescheduler
            properties:
              conditions:
                description: conditions is a list of conditions and their status
                items:
                  description: OperatorCondition is just the standard condition fields.
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  type: object
                type: array
              generations:
                description: generations are used to determine when an item needs
                  to be reconciled or has changed in a way that needs a reaction.
                items:
                  description: GenerationStatus keeps track of the generation for
                    a given resource so that decisions about forced updates can be
                    made.
                  properties:
                    group:
                      description: group is the group of the thing you're tracking
                      type: string
                    hash:
                      description: hash is an optional field set for resources without
                        generation that are content sensitive like secrets and configmaps
                      type: string
                    lastGeneration:
                      description: lastGeneration is the last generation of the workload
                        controller involved
                      format: int64
                      type: integer
                    name:
                      description: name is the name of the thing you're tracking
                      type: string
                    namespace:
                      description: namespace is where the thing you're tracking is
                      type: string
                    resource:
                      description: resource is the resource type of the thing you're
                        tracking
                      type: string
                  type: object
                type: array
              observedGeneration:
                description: observedGeneration is the last generation change you've
                  dealt with
                format: int64
                type: integer
              readyReplicas:
                description: readyReplicas indicates how many replicas are ready and
                  at the desired state
                format: int32
                type: integer
              version:
                description: version is the level this availability applies to
                type: string
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
